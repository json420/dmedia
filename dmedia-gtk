#!/usr/bin/python3

# dmedia: distributed media library
# Copyright (C) 2011 Novacut Inc
# 
# This file is part of `dmedia`.
# 
# `dmedia` is free software: you can redistribute it and/or modify it under the
# terms of the GNU Affero General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
# 
# `dmedia` is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
# details.
# 
# You should have received a copy of the GNU Affero General Public License along
# with `dmedia`.  If not, see <http://www.gnu.org/licenses/>.
#
# Authors:
#   Jason Gerard DeRose <jderose@novacut.com>

import optparse
import json

import dmedia
from dmedia.gtk import GObject, Gtk


class UI:
    def __init__(self, benchmark=False):
        self.benchmark = benchmark
        self.window = Gtk.Window()
        self.window.connect('destroy', Gtk.main_quit)
        self.window.set_default_size(960, 540)
        self.window.set_title('DMedia')
        self.notebook = Gtk.Notebook()
        self.window.add(self.notebook)
        self.append_page('Import')
        self.append_page('Library')
        self.append_page('Storage')

    def append_page(self, text, child=None):
        if child is None:
            child = Gtk.VBox()
        label = Gtk.Label(text)
        label.set_padding(8, 2)
        self.notebook.append_page(child, label)

    def run(self):
        self.window.show_all()
        GObject.idle_add(self.on_idle)
        Gtk.main()

    def on_idle(self):
        if self.benchmark:
            Gtk.main_quit()
            return
        from dmedia.service.dbus import session
        session.get_async(self.on_proxy, 'org.freedesktop.DMedia', '/')

    def on_proxy(self, proxy, async_result, *args):
        self.proxy = proxy
        self.env = json.loads(self.proxy.GetEnv())
        self.start_importer()

    def start_importer(self):
        from dmedia.service.wrappers import GImportManager
        from dmedia.gtk.ubuntu import UnityImportUX
        self.gmanager = GImportManager(self.env)
        self.ux = UnityImportUX(self.gmanager)


parser = optparse.OptionParser(version=dmedia.__version__)
parser.add_option('--benchmark',
    help='benchmark app startup time',
    action='store_true',
    default=False,
)
(options, args) = parser.parse_args()

dmedia.configure_logging()
ui = UI(options.benchmark)
ui.run()
