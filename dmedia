#!/usr/bin/env python

# Authors:
#   Jason Gerard DeRose <jderose@novacut.com>
#   David Green <david4dev@gmail.com>
#
# dmedia: distributed media library
# Copyright (C) 2010 Jason Gerard DeRose <jderose@novacut.com>
#
# This file is part of `dmedia`.
#
# `dmedia` is free software: you can redistribute it and/or modify it under the
# terms of the GNU Affero General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# `dmedia` is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
# details.
#
# You should have received a copy of the GNU Affero General Public License along
# with `dmedia`.  If not, see <http://www.gnu.org/licenses/>.


"""
WARNING: the dmedia content-hash and schema are *not* yet stable, may change
wildly and without warning!

This will eventually be turned into a VCS-style script with several commands.
For now it has a single function, to recursively import media files from a
directory.  At this point, is is a quick-and-dirty demo of how media files might
be stored and how their meta-data might be stored.

For example, say we scan all the JPEG images in the '/usr/share/backgrounds'
directory:

    dmedia /usr/share/backgrounds jpg

Media files are identified by their unique Id which is generated by their
base32-encoded sha1 content-hash.  In the above example, the
'Life_by_Paco_Espinoza.jpg' file happens to have a sha1 content-hash of
'6BRRXCGRM2GKVPTREJPGRNGUR2GF2L4K'.  As such, this file will be stored at:

    ~/.dmedia/6B/RRXCGRM2GKVPTREJPGRNGUR2GF2L4K.jpg

Meta-data for the media files is stored in CouchDB using desktopcouch.  Each
media file has its own document.  The sha1 content-hash is used as the document
'_id'.  For example, the 'Life_by_Paco_Espinoza.jpg' file has a document that
looks like this:

    {
       "_id": "6BRRXCGRM2GKVPTREJPGRNGUR2GF2L4K",
       "_rev": "1-c19ea015eb53ede147d63d55f3967d13",
       "name": "Life_by_Paco_Espinoza.jpg",
       "record_type": "http://example.com/dmedia",
       "bytes": 360889,
       "height": 1500,
       "shutter": "1/400",
       "width": 2000,
       "ext": "jpg",
       "camera": "DSC-H5",
       "iso": 125,
       "focal_length": "6.0 mm",
       "mtime": 1284394022,
       "aperture": 4
    }

All media files will have the following fields:

    bytes - File size in bytes
    mtime - Value of path.getmtime() at time of import
    name - The path.basename() part of the original source file
    ext - The extension of the original source file, normalized to lower-case

Additional fields depend upon the type of media file.  For example, image and
video files will always have 'width' and 'height', whereas video and audio files
will always have a 'duration'.

You can browse through the dmedia database using a standard web-browser, like
this:

  firefox ~/.local/share/desktop-couch/couchdb.html

Note that the sha1 hash is only being used as a stop-gap.  dmedia will use the
Skein hash after its final constant tweaks are made.  See:

  http://blog.novacut.com/2010/09/how-about-that-skein-hash.html
"""

import sys
import os
from os import path
import optparse
import logging
import dmedialib
import xdg.BaseDirectory
from dmedialib.constants import EXT_MAP

script = path.basename(sys.argv[0])

parser = optparse.OptionParser(
    version=dmedialib.__version__,
    usage='Usage: %s DIRECTORY ' % script,
    epilog='Example: %s /media/EOS_DIGITAL jpg cr2 mov' % script,
)
parser.add_option('--quick',
    dest="extract",
    action='store_false',
    default=True,
    help='Do a fast scan without extracting extra metadata',
)
parser.add_option('--project',
    default=None,
    help='Add imported files to specified PROJECT',
)
parser.add_option('--tag',
    action='append',
    default=[],
    help='Add specified TAG to imported files',
)
parser.add_option('--type',
    action='append',
    default=[],
    help="Add specified TYPE to the list of file types to limit the import to. TYPE can be 'image', 'audio', 'video' or 'all'. 'all' is the default and represents 'image', 'audio' and 'video' files.",
)
parser.add_option('--extension',
    action='append',
    default=[],
    help='Add specified EXTENSION to the list of file extensions to limit the import to. By default, all file extensions that are recognised as audio, video or image file formats will be imported.',
)

(options, args) = parser.parse_args()


options.tags = sorted(set(
    t.strip().lower() for t in options.tag
))


if len(args) < 1:
    parser.print_usage()
    sys.exit('ERROR: must provide DIRECTORY')
base = path.abspath(args[0])
if not path.isdir(base):
    parser.print_usage()
    sys.exit('ERROR: not a directory: %r' % base)

extensions = options.extensions
for t in options.type:
    if EXT_MAP.has_key(t):
        for ext in EXT_MAP[t]:
            if not ext in extensions:
                extensions.append(ext)
if len(extensions) == 0:
    extensions += list(EXT_MAP['all'])

xdg_cache_path = xdg.BaseDirectory.xdg_cache_home
cache = path.join(xdg_cache_path, 'dmedia')
if not path.exists(cache):
    os.makedirs(cache)
if path.isdir(cache):
    logfile = path.join(cache, 'log.txt')
    logging.basicConfig(
        filename=logfile,
        filemode='w',
        level=logging.DEBUG,
    )


from dmedialib.importer import Importer

common = {}
if options.project:
    common['project'] = options.project
if options.tags:
    common['tags'] = options.tags

importer = Importer()

total = 0
counts = {}
for d in importer.recursive_import(base, extensions, common, options.extract):
    print '  %(action)s %(src)r' % d
    action = d['action']
    counts[action] = counts.get(action, 0) + 1
    total += 1

print ''
for key in sorted(counts):
    print '%s: %d' % (key, counts[key])
print 'total_scanned: %d' % total

couchdb_data_path = xdg.BaseDirectory.save_data_path("desktop-couch")
dc = path.join(
    couchdb_data_path, 'couchdb.html'
)
print ''
print 'To browse dmedia database in CouchDB, run:'
print '  xdg-open %s' % dc
